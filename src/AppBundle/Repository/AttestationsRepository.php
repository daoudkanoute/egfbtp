<?php

namespace AppBundle\Repository;

/**
 * AttestationsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AttestationsRepository extends \Doctrine\ORM\EntityRepository
{

    function getAttestationGraph()
    {
        $qb = $this->createQueryBuilder('a')->select('a.successed, COUNT(a) as gCount, MONTH(a.date) AS gDmonth, YEAR(a.date) AS gDyear');
        $qb->groupBy('gDmonth')
            ->addGroupBy('gDyear')
            ->addGroupBy('a.successed');
        $result  = $qb->getQuery()->getResult();
        $stat = [true => 'reussites', false => 'echecs'];
        $mois = [ "Jan", "Fev", "Mar", "Avr", "Mai", "Juin", "Juil", "Ao√ªt", "Sep", "Oct", "Nov", "Dec" ];
        $return = $values = [];
        if(!$result){
            $year = date('Y');
            for($i=0; $i<12; $i++) {
                $return[$year][$mois[$i]] = [ 'reussites' => 0, 'echecs' => 0, 'somme' => 0 ];
            }
            return $return;
        }

        foreach ($result as $item)
        {
            if(!is_null($item['successed']))
                $values[$item['gDyear']][$item['gDmonth']-1][$stat[$item['successed']]] = $item['gCount'];
        }

        foreach ($values as $year => $months)
            for($i=0; $i<12; $i++) {
                if(isset($values[$year][$i])) {
                    $val = $months[$i];
                    if(!isset($val['reussites'])) $val['reussites'] = 0;
                    if(!isset($val['echecs']))    $val['echecs'] = 0;
                    if(!isset($val['somme']))    $val['somme'] = $val['reussites'] + $val['echecs'];
                    $return[$year][$mois[$i]] = $val;
                } else {
                    $return[$year][$mois[$i]] = [ 'reussites' => 0, 'echecs' => 0, 'somme' => 0];
                }
            }
        return $return;
    }

    function getTodayAttestationCount()
    {
        $qb = $this->createQueryBuilder('a')->select('COUNT(a)');
        $qb->where($qb->expr()->eq('a.date',':date'))->setParameter('date',new \DateTime('today'));
        return $qb->getQuery()->getSingleScalarResult();
    }

    function getTodayAttestationReussitCount()
    {
        $qb = $this->createQueryBuilder('a')->select('COUNT(a)');
        $qb->where($qb->expr()->eq('a.date',':date'))->setParameter('date',new \DateTime('today'));
        $qb->andWhere($qb->expr()->eq('a.successed',true));
        return $qb->getQuery()->getSingleScalarResult();
    }
}
